<resources>
    <string name="app_name">SmartRefreshLayout</string>
    <string name="large_text">
        "Material is the metaphor.\n\n"

        "A material metaphor is the unifying theory of a rationalized space and a system of motion."
        "The material is grounded in tactile reality, inspired by the study of paper and ink, yet "
        "technologically advanced and open to imagination and magic.\n"
        "Surfaces and edges of the material provide visual cues that are grounded in reality. The "
        "use of familiar tactile attributes helps users quickly understand affordances. Yet the "
        "flexibility of the material creates new affordances that supercede those in the physical "
        "world, without breaking the rules of physics.\n"
        "The fundamentals of light, surface, and movement are key to conveying how objects move, "
        "interact, and exist in space and in relation to each other. Realistic lighting shows "
        "seams, divides space, and indicates moving parts.\n\n"

        "Bold, graphic, intentional.\n\n"

        "The foundational elements of print based design typography, grids, space, scale, color, "
        "and use of imagery guide visual treatments. These elements do far more than please the "
        "eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to edge "
        "imagery, large scale typography, and intentional white space create a bold and graphic "
        "interface that immerse the user in the experience.\n"
        "An emphasis on user actions makes core functionality immediately apparent and provides "
        "waypoints for the user.\n\n"

        "Motion provides meaning.\n\n"

        "Motion respects and reinforces the user as the prime mover. Primary user actions are "
        "inflection points that initiate motion, transforming the whole design.\n"
        "All action takes place in a single environment. Objects are presented to the user without "
        "breaking the continuity of experience even as they transform and reorganize.\n"
        "Motion is meaningful and appropriate, serving to focus attention and maintain continuity. "
        "Feedback is subtle yet clear. Transitions are efﬁcient yet coherent.\n\n"

        "3D world.\n\n"

        "The material environment is a 3D space, which means all objects have x, y, and z "
        "dimensions. The z-axis is perpendicularly aligned to the plane of the display, with the "
        "positive z-axis extending towards the viewer. Every sheet of material occupies a single "
        "position along the z-axis and has a standard 1dp thickness.\n"
        "On the web, the z-axis is used for layering and not for perspective. The 3D world is "
        "emulated by manipulating the y-axis.\n\n"

        "Light and shadow.\n\n"

        "Within the material environment, virtual lights illuminate the scene. Key lights create "
        "directional shadows, while ambient light creates soft shadows from all angles.\n"
        "Shadows in the material environment are cast by these two light sources. In Android "
        "development, shadows occur when light sources are blocked by sheets of material at "
        "various positions along the z-axis. On the web, shadows are depicted by manipulating the "
        "y-axis only. The following example shows the card with a height of 6dp.\n\n"

        "Resting elevation.\n\n"

        "All material objects, regardless of size, have a resting elevation, or default elevation "
        "that does not change. If an object changes elevation, it should return to its resting "
        "elevation as soon as possible.\n\n"

        "Component elevations.\n\n"

        "The resting elevation for a component type is consistent across apps (e.g., FAB elevation "
        "does not vary from 6dp in one app to 16dp in another app).\n"
        "Components may have different resting elevations across platforms, depending on the depth "
        "of the environment (e.g., TV has a greater depth than mobile or desktop).\n\n"

        "Responsive elevation and dynamic elevation offsets.\n\n"

        "Some component types have responsive elevation, meaning they change elevation in response "
        "to user input (e.g., normal, focused, and pressed) or system events. These elevation "
        "changes are consistently implemented using dynamic elevation offsets.\n"
        "Dynamic elevation offsets are the goal elevation that a component moves towards, relative "
        "to the component’s resting state. They ensure that elevation changes are consistent "
        "across actions and component types. For example, all components that lift on press have "
        "the same elevation change relative to their resting elevation.\n"
        "Once the input event is completed or cancelled, the component will return to its resting "
        "elevation.\n\n"

        "Avoiding elevation interference.\n\n"

        "Components with responsive elevations may encounter other components as they move between "
        "their resting elevations and dynamic elevation offsets. Because material cannot pass "
        "through other material, components avoid interfering with one another any number of ways, "
        "whether on a per component basis or using the entire app layout.\n"
        "On a component level, components can move or be removed before they cause interference. "
        "For example, a floating action button (FAB) can disappear or move off screen before a "
        "user picks up a card, or it can move if a snackbar appears.\n"
        "On the layout level, design your app layout to minimize opportunities for interference. "
        "For example, position the FAB to one side of stream of a cards so the FAB won’t interfere "
        "when a user tries to pick up one of cards.\n\n"
    </string>
    <string name="action_settings">Settings</string>
    <string name="title_activity_settings">Settings</string>

    <!-- Strings related to Settings -->

    <string name="title_activity_fly_refresh">FlyRefresh</string>
    <string name="title_activity_index_main">首页</string>
    <string name="title_style">风格</string>
    <string name="title_using">使用</string>
    <string name="title_practice">实战</string>
    <string name="region_hint">未选择</string>
    <string name="region_name">已选地区</string>

    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello blank fragment</string>
    <string name="fragment_refresh_styles">风格展示</string>
    <string name="fragment_refresh_using">使用示例</string>
    <string name="title_activity_style_wave_swip">全屏水波</string>
    <string name="title_activity_style_material">官方主题</string>
    <string name="title_activity_style_water_drop">苹果水滴</string>
    <string name="title_activity_style_phoenix">金色校园</string>
    <string name="title_activity_style_taurus">冲上云霄</string>
    <string name="title_activity_style_bezier">贝塞尔雷达</string>
    <string name="title_activity_style_classics">经典风格</string>
    <string name="title_activity_style_circle">弹出圆圈</string>
    <string name="title_activity_style_fungame_battlecity">战争城市</string>
    <string name="title_activity_style_fungame_hitblock">打砖块</string>
    <string name="title_activity_style_storehouse">StoreHouse</string>
    <string name="title_activity_using_basic">基本使用</string>
    <string name="title_activity_using_assign_default">全局默认</string>
    <string name="title_activity_using_assign_xml">XML配置</string>
    <string name="title_activity_using_assign_code">java代码设置</string>
    <string name="description_set_default_creater">这是使用定制Header和Footer的第一种方法-全局默认\n\n
        本方法是实际项目中最常用的方法，起特点有：\n\n
        1.设置一次全部生效，不用多次写重复的代码\n
        2.优先级最低，在特别页面可以轻松的覆盖替换\n\n
        使用方法： \n
        //设置全局的Header构建器 \n
        SmartRefreshLayout.setDefaultRefreshHeaderCreater(new DefaultRefreshHeaderCreater() {\n
        public RefreshHeader createRefreshHeader(Context context, RefreshLayout layout) {\n
        return new ClassicsHeader(context);//指定为经典Header，默认是 贝塞尔雷达Header\n
        }\n
        });\n
        //设置全局的Footer构建器\n
        SmartRefreshLayout.setDefaultRefreshFooterCreater(new DefaultRefreshFooterCreater() {\n
        public RefreshFooter createRefreshFooter(Context context, RefreshLayout layout) {\n
        return new ClassicsFooter(context);//指定为经典Footer，默认是 BallPulseFooter\n
        }\n
        });\n\n
        关键代码，需要在布局生成之前设置，建议代码放在 Application.onCreate 中
    </string>
    <string name="description_define_in_xml"><![CDATA[这是使用定制Header和Footer的第二种方法-Xml中配置\n\n
        在需要使用特别的Header或者特别配置的页面时候可以使用本方法\n\n
        本方法的特点：\n
        1.可以在Androd Studio中的预览窗口预览效果\n
        2.优先级高于 【全局默认】但是低于 【JavaCode】\n\n
        代码示例：\n
        <com.scwang.smartrefresh.SmartRefreshLayout\n
            \t\tandroid:layout_width="match_parent"\n
            \t\tandroid:layout_height="match_parent">\n
            \t<com.scwang.smartrefresh.header.ClassicsHeader\n
                \t\tandroid:layout_width="match_parent"\n
                \t\tandroid:layout_height="wrap_content"/>\n
            \t<TextView\n
                \t\tandroid:layout_width="match_parent"\n
                \t\tandroid:layout_height="match_parent"/>\n
            \t<com.scwang.smartrefresh.footer.ClassicsFooter\n
                \t\tandroid:layout_width="match_parent"\n
                \t\tandroid:layout_height="wrap_content"/>\n
        </com.scwang.smartrefresh.SmartRefreshLayout>\n
    ]]></string>
    <string name="description_define_in_code">这是使用定制Header和Footer的第三种方法-代码设置\n\n
        本方法是实际项目中比较少用的方法，起特点有：\n\n
        1.设置一次生效一次，需要多处设置，建议特别的页面使用\n
        2.优先级最高，即使使用了会覆盖方法一和方法二的设置\n\n
        使用方法： \n
        final RefreshLayout refreshLayout = (RefreshLayout) findViewById(R.id.smartLayout);\n
        //设置 Header 为 Material风格\n
        refreshLayout.setRefreshHeader(new MaterialHeader(this));\n
        //设置 Footer 为 三球动画\n
        refreshLayout.setRefreshFooter(new BallPulseFooter(this));\n\n
    </string>
    <string name="title_activity_using_listener">多功能监听器</string>
    <string name="title_activity_style_dropbox">掉落盒子</string>
    <string name="title_activity_style_delivery">气球快递</string>
    <string name="title_activity_style_flyrefresh">纸飞机</string>
    <string name="title_activity_practice_repast">餐饮美食</string>
    <string name="title_activity_practice_profile">个人中心</string>
    <string name="fragment_refresh_practive">实战</string>
    <string name="title_activity_using_overscroll">越界回弹</string>
    <string name="title_activity_practice_webview">Github</string>
    <string name="title_activity_practice_feedlist">微博列表</string>
</resources>
